{"version":3,"sources":["components/Form.js","components/ActiveTask.js","components/ActiveTasksList.js","components/DoneTask.js","components/DoneTasksList.js","components/App.js","index.js"],"names":["Form","date","Date","state","text","checkbox","_this","toISOString","slice","maxDate","concat","isCorrect","handleInputChange","e","typeOfValue","target","type","value","checked","setState","Object","defineProperty","handleSubmit","preventDefault","length","Boolean","handleNewTask","props","priority","react_default","a","createElement","className","onSubmit","this","htmlFor","id","onChange","placeholder","min","max","Component","ActiveTask","_props$task","task","handleDoneTask","onClick","ActiveTasksList","tasks","tasksList","toConsumableArray","tasksNumber","filter","finishedDate","sort","b","toLowerCase","map","components_ActiveTask","key","DoneTask","time","toLocaleString","charAt","DoneTasksList","doneTasksNumber","components_DoneTask","App","currentId","newTask","prevState","TaskId","isDone","getTime","components_Form","components_ActiveTasksList","components_DoneTasksList","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3ba73d41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass Form extends Component {\r\n  date = new Date();\r\n  state = {\r\n    text: \"\",\r\n    checkbox: false,\r\n    date: this.date.toISOString().slice(0, 10),\r\n    maxDate: `${this.date.toISOString().slice(0, 4) * 1 + 1}-12-31`,\r\n    isCorrect: true\r\n  };\r\n  handleInputChange = e => {\r\n    const typeOfValue = e.target.type;\r\n    let value = e.target.value;\r\n    if (typeOfValue === \"checkbox\") value = e.target.checked;\r\n    this.setState({\r\n      [typeOfValue]: value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.text.length < 3 || !Boolean(this.state.date)) {\r\n      return this.setState({\r\n        isCorrect: false\r\n      });\r\n    }\r\n    const { handleNewTask } = this.props;\r\n    const newTask = {\r\n      text: this.state.text,\r\n      priority: this.state.checkbox,\r\n      date: this.state.date\r\n    };\r\n    handleNewTask(newTask);\r\n    this.date = new Date();\r\n    this.setState({\r\n      text: \"\",\r\n      checkbox: false,\r\n      date: this.date.toISOString().slice(0, 10),\r\n      maxDate: `${this.date.toISOString().slice(0, 4) * 1 + 1}-12-31`,\r\n      isCorrect: true\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p>\r\n            <label htmlFor=\"taskContent\">\r\n              <span>Zadanie:</span>\r\n              <input\r\n                type=\"text\"\r\n                id=\"taskContent\"\r\n                value={this.state.text}\r\n                onChange={this.handleInputChange}\r\n                placeholder=\"Treść zadania...\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"priority\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"priority\"\r\n                checked={this.state.checkbox}\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <span>Priorytet</span>\r\n            </label>\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"date\">\r\n              <span>Termin wykonania:</span>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                value={this.state.date}\r\n                min={this.state.date}\r\n                max={this.state.maxDate}\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </label>\r\n          </p>\r\n          <button>dodaj</button>\r\n        </form>\r\n        {!this.state.isCorrect && (\r\n          <h1>\r\n            Treść zadania musi zawierać przynajmniej 3 znaki oraz mieć\r\n            wyznaczony termin wykonania!\r\n          </h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React from \"react\";\r\nconst ActiveTask = props => {\r\n  const { id, text, priority, date } = props.task;\r\n  const { handleDoneTask } = props;\r\n  return (\r\n    <p className=\"activeTask\">\r\n      <span>\r\n        <strong className={priority ? \"important\" : null}>{text}</strong>- do{\" \"}\r\n        {date}\r\n      </span>\r\n      <button onClick={() => handleDoneTask(id, true)}>zadanie wykonane</button>\r\n      <button onClick={() => handleDoneTask(id, false)}>x</button>\r\n    </p>\r\n  );\r\n};\r\nexport default ActiveTask;\r\n","import React from \"react\";\r\nimport ActiveTask from \"./ActiveTask\";\r\nconst ActiveTasksList = props => {\r\n  const { tasks, handleDoneTask } = props;\r\n  let tasksList = [...tasks];\r\n  tasksList = tasksList.filter(task => !task.finishedDate);\r\n  const tasksNumber = tasksList.length;\r\n  tasksList.sort((a, b) => {\r\n    a = a.text.toLowerCase();\r\n    b = b.text.toLowerCase();\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0;\r\n  });\r\n  tasksList = tasksList.map(task => (\r\n    <ActiveTask key={task.id} task={task} handleDoneTask={handleDoneTask} />\r\n  ));\r\n  return (\r\n    <section className=\"activeTasks\">\r\n      {tasksNumber ? (\r\n        <h1>Wykaz aktywnych zadań</h1>\r\n      ) : (\r\n        <h1>Brak aktywnych zadań do wykonania</h1>\r\n      )}\r\n      {tasksList}\r\n    </section>\r\n  );\r\n};\r\nexport default ActiveTasksList;\r\n","import React from \"react\";\r\nconst DoneTask = props => {\r\n  const { id, text, priority, date, finishedDate } = props.task;\r\n  const { handleDoneTask } = props;\r\n  let time = new Date(finishedDate).toLocaleString();\r\n  if (time.charAt(1) === \".\") time = `0${time}`;\r\n  return (\r\n    <p className=\"doneTask\">\r\n      <span>\r\n        <strong className={priority ? \"important\" : null}>{text}</strong>\r\n        <em>(zrobić do {date})</em>\r\n      </span>\r\n      <span>\r\n        - potwierdzenie wykonania {time}\r\n        <button onClick={() => handleDoneTask(id, false)}>x</button>\r\n      </span>\r\n    </p>\r\n  );\r\n};\r\nexport default DoneTask;\r\n","import React from \"react\";\r\nimport DoneTask from \"./DoneTask\";\r\nconst DoneTasksList = props => {\r\n  const { tasks, handleDoneTask } = props;\r\n  let tasksList = [...tasks];\r\n  tasksList = tasksList.filter(task => task.finishedDate);\r\n  tasksList.sort((a, b) => {\r\n    a = a.finishedDate;\r\n    b = b.finishedDate;\r\n    if (a < b) return 1;\r\n    if (a > b) return -1;\r\n    return 0;\r\n  });\r\n  const doneTasksNumber = tasksList.length;\r\n  tasksList = tasksList.slice(0, 3);\r\n  tasksList = tasksList.map(task => (\r\n    <DoneTask key={task.id} task={task} handleDoneTask={handleDoneTask} />\r\n  ));\r\n  return (\r\n    <section className=\"doneTasks\">\r\n      <h1>\r\n        Zadania wykonane<em>({doneTasksNumber})</em>\r\n      </h1>\r\n      {Boolean(doneTasksNumber) && <h2>Ostatnie 3 wykonane zadania</h2>}\r\n      {tasksList}\r\n    </section>\r\n  );\r\n};\r\nexport default DoneTasksList;\r\n","import React, { Component, Fragment as div } from \"react\";\r\nimport Form from \"./Form\";\r\nimport ActiveTasksList from \"./ActiveTasksList\";\r\nimport DoneTasksList from \"./DoneTasksList\";\r\nimport \"../styles/App.css\";\r\nclass App extends Component {\r\n  state = {\r\n    currentId: null,\r\n    tasks: [\r\n      {\r\n        id: 0,\r\n        text: \"naprawić kran w kuchni\",\r\n        priority: false,\r\n        date: \"2019-02-07\",\r\n        finishedDate: null\r\n      },\r\n      {\r\n        id: 1,\r\n        text: \"zrobić zakupy\",\r\n        priority: false,\r\n        date: \"2019-04-28\",\r\n        finishedDate: null\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"wyprowadzić psa\",\r\n        priority: true,\r\n        date: \"2019-02-08\",\r\n        finishedDate: null\r\n      },\r\n      {\r\n        id: 4,\r\n        text: \"zrobić dobry uczynek\",\r\n        priority: true,\r\n        date: \"2019-12-31\",\r\n        finishedDate: null\r\n      }\r\n    ]\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentId: this.state.tasks.length + 1\r\n    });\r\n  }\r\n  handleNewTask = newTask => {\r\n    newTask.id = this.state.currentId;\r\n    newTask.finishedDate = null;\r\n    const tasks = [...this.state.tasks, newTask];\r\n    this.setState(prevState => ({\r\n      tasks,\r\n      currentId: prevState.currentId + 1\r\n    }));\r\n  };\r\n  handleDoneTask = (TaskId, isDone) => {\r\n    let tasks = [...this.state.tasks];\r\n    tasks = tasks.map(task => {\r\n      if (task.id === TaskId) {\r\n        if (isDone) task.finishedDate = new Date().getTime();\r\n        else return null;\r\n      }\r\n      return task;\r\n    });\r\n    tasks = tasks.filter(task => task !== null);\r\n    this.setState({\r\n      tasks\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Form handleNewTask={this.handleNewTask} />\r\n        <ActiveTasksList\r\n          tasks={this.state.tasks}\r\n          handleDoneTask={this.handleDoneTask}\r\n        />\r\n        <DoneTasksList\r\n          tasks={this.state.tasks}\r\n          handleDoneTask={this.handleDoneTask}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/App.js\";\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}